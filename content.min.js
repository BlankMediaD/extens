function detectCaptchaPage(){const recaptchaForm=document.getElementById("captcha-form");const recaptchaDiv=document.querySelector(".g-recaptcha");const recaptchaCheckbox=document.querySelector(".recaptcha-checkbox");const recaptchaAnchor=document.getElementById("recaptcha-anchor");const recaptchaIframe=document.querySelector('iframe[src*="google.com/recaptcha"]');if(recaptchaForm||recaptchaDiv||recaptchaCheckbox||recaptchaAnchor||recaptchaIframe){console.log("CAPTCHA detected - attempting to solve");chrome.runtime.sendMessage({action:"captchaDetected",url:window.location.href});addCaptchaInstructions();setTimeout((()=>{attemptAutoClickCaptcha()}),1500);return true}return false}function addCaptchaInstructions(){if(document.getElementById("leadspry-captcha-instructions")){return}const instructionsDiv=document.createElement("div");instructionsDiv.id="leadspry-captcha-instructions";instructionsDiv.style.position="fixed";instructionsDiv.style.bottom="0";instructionsDiv.style.left="0";instructionsDiv.style.right="0";instructionsDiv.style.padding="15px";instructionsDiv.style.backgroundColor="#fff3cd";instructionsDiv.style.borderBottom="2px solid #ffeeba";instructionsDiv.style.color="#856404";instructionsDiv.style.fontFamily="Arial, sans-serif";instructionsDiv.style.zIndex="9999";instructionsDiv.style.textAlign="center";instructionsDiv.style.boxShadow="0 2px 5px rgba(0,0,0,0.2)";instructionsDiv.innerHTML=`\n    <div style="font-weight: bold; margin-bottom: 5px;">LeadSpry: CAPTCHA Detected</div>\n    <div>Please complete the CAPTCHA verification to continue scraping. The process will automatically resume once solved.</div>\n  `;document.body.insertBefore(instructionsDiv,document.body.firstChild)}function attemptAutoClickCaptcha(){try{const captchaCheckbox=document.getElementById("recaptcha-anchor")||document.querySelector(".recaptcha-checkbox")||document.querySelector('[role="checkbox"]')||document.querySelector(".rc-anchor-checkbox");if(captchaCheckbox){console.log("CAPTCHA checkbox found - attempting to click");chrome.runtime.sendMessage({action:"captchaClickAttempt"});captchaCheckbox.click();setTimeout((()=>{checkCaptchaSuccess()}),3e3)}else{console.log("CAPTCHA checkbox not found");updateCaptchaInstructions(false);chrome.runtime.sendMessage({action:"captchaAutoSolveFailed"});startCaptchaSolveMonitoring()}}catch(error){console.error("Error attempting to solve CAPTCHA:",error);updateCaptchaInstructions(false);chrome.runtime.sendMessage({action:"captchaAutoSolveFailed"});startCaptchaSolveMonitoring()}}function updateCaptchaInstructions(success){const instructionsDiv=document.getElementById("leadspry-captcha-instructions");if(!instructionsDiv)return;if(success){instructionsDiv.style.backgroundColor="#d4edda";instructionsDiv.style.borderBottom="2px solid #c3e6cb";instructionsDiv.style.color="#155724";instructionsDiv.innerHTML=`\n      <div style="font-weight: bold; margin-bottom: 5px;">LeadSpry: CAPTCHA Solved</div>\n      <div>CAPTCHA solved successfully! Lead generation will resume automatically.</div>\n    `;setTimeout((()=>{if(instructionsDiv&&instructionsDiv.parentNode){instructionsDiv.parentNode.removeChild(instructionsDiv)}}),3e3)}else{instructionsDiv.style.backgroundColor="#f8d7da";instructionsDiv.style.borderBottom="2px solid #f5c6cb";instructionsDiv.style.color="#721c24";instructionsDiv.innerHTML=`\n      <div style="font-weight: bold; margin-bottom: 5px;">LeadSpry: Manual CAPTCHA Required</div>\n      <div>Automatic solving failed. Please complete the CAPTCHA manually to continue scraping.</div>\n      <div style="margin-top: 8px; font-size: 0.9em;">Scraping will resume once you complete the verification.</div>\n    `}}function checkCaptchaSuccess(){const captchaSolved=document.querySelector(".recaptcha-checkbox-checked")||document.querySelector('[aria-checked="true"]')||!document.querySelector(".g-recaptcha");if(captchaSolved){console.log("CAPTCHA appears to be solved automatically");updateCaptchaInstructions(true);chrome.runtime.sendMessage({action:"captchaAutoSolveSuccess"})}else{console.log("Automatic CAPTCHA solving failed, user intervention needed");updateCaptchaInstructions(false);chrome.runtime.sendMessage({action:"captchaAutoSolveFailed"});startCaptchaSolveMonitoring()}}function startCaptchaSolveMonitoring(){const checkInterval=setInterval((()=>{if(!window.location.href.includes("google.com")){clearInterval(checkInterval);return}if(window.location.href.includes("google.com/search")&&!window.location.href.includes("captcha")&&!document.querySelector(".g-recaptcha")&&!document.querySelector(".recaptcha-checkbox")&&!document.querySelector('iframe[src*="google.com/recaptcha"]')){console.log("CAPTCHA appears to be solved manually");clearInterval(checkInterval);const instructionsDiv=document.getElementById("leadspry-captcha-instructions");if(instructionsDiv&&instructionsDiv.parentNode){instructionsDiv.parentNode.removeChild(instructionsDiv)}chrome.runtime.sendMessage({action:"captchaSolved"});setTimeout((()=>{scrapeGoogleSearchResults()}),1e3)}}),2e3)}if(document.readyState==="loading"){document.addEventListener("DOMContentLoaded",checkForCaptcha)}else{checkForCaptcha()}function checkForCaptcha(){if(detectCaptchaPage()){return}}function extractEmail(text){const emailRegex=/\b([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})\b/gi;const matches=text.match(emailRegex);if(matches){const uniqueEmails=[...new Set(matches.map((email=>email.toLowerCase())))];const validEmails=uniqueEmails.filter((email=>{if(/example|sample|test@|user@|yourname|your.email|your-email|name@|email@|domain|placeholder/i.test(email)){return false}const tld=email.split(".").pop();if(tld.length>4&&!/^(info|email|online|museum|travel)$/i.test(tld)){return false}return true}));return validEmails.length>0?validEmails[0]:""}return""}function findPhones(text){const phoneRegex=/(?:[-+() ]*\d){10,13}/g;const textNumbers=text.match(phoneRegex)||[];let phoneNumbers=new Set;textNumbers.forEach((match=>{const trimmed=match.trim();if(trimmed){phoneNumbers.add(trimmed)}}));if(document&&document.querySelectorAll){const telLinks=Array.from(document.querySelectorAll('a[href^="tel:"]')).map((a=>a.href.replace("tel:","")));telLinks.forEach((number=>{const cleaned=number.replace(/[^\d+]/g,"");if(cleaned.length>=10&&cleaned.length<=15){phoneNumbers.add(number.trim())}}))}const phoneArray=[...phoneNumbers].filter(((value,index,self)=>{const digits=value.replace(/\D/g,"");if(digits.length<7||digits.length>15){return false}if(/^(.)\1+$/.test(digits)||/^(?:0123|1234|2345|3456|4567|5678|6789|9876|8765|7654|6543|5432|4321|3210)\d*$/.test(digits)){return false}return self.indexOf(value)===index}));return phoneArray.length>0?phoneArray[0]:""}function extractPhone(text){return findPhones(text)}function scrapeGoogleSearchResults(){const results=[];const seenUrls=new Set;const seenEmails=new Set;const seenPhones=new Set;const resultDivs=document.querySelectorAll(".g, .MjjYud, .yuRUbf, .hlcw0c, .srKDX, .kp-wholepage");let foundRelevantData=false;const pageText=document.body.innerText;const allPageEmails=pageText.match(/\b([a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,})\b/gi)||[];const uniquePageEmails=[...new Set(allPageEmails.map((email=>email.toLowerCase())))];const validPageEmails=uniquePageEmails.filter((email=>{if(/example|sample|test@|user@|yourname|your.email|name@|email@|domain|placeholder|@example|@sample/i.test(email)){return false}return true}));const structuredData=Array.from(document.querySelectorAll('script[type="application/ld+json"]')).map((script=>{try{return JSON.parse(script.textContent)}catch(e){return null}})).filter((data=>data!==null));const structuredContacts=[];structuredData.forEach((data=>{const extractFromObj=obj=>{if(!obj)return;if(obj.email&&!seenEmails.has(obj.email.toLowerCase())){const email=extractEmail(obj.email);if(email){structuredContacts.push({email:email});seenEmails.add(email.toLowerCase())}}if(obj.telephone&&!seenPhones.has(obj.telephone)){const phone=extractPhone(obj.telephone);if(phone){structuredContacts.push({phone:phone});seenPhones.add(phone)}}if(obj.contactPoint){if(Array.isArray(obj.contactPoint)){obj.contactPoint.forEach((cp=>{if(cp.telephone&&!seenPhones.has(cp.telephone)){const phone=extractPhone(cp.telephone);if(phone){structuredContacts.push({phone:phone});seenPhones.add(phone)}}if(cp.email&&!seenEmails.has(cp.email.toLowerCase())){const email=extractEmail(cp.email);if(email){structuredContacts.push({email:email});seenEmails.add(email.toLowerCase())}}}))}else if(obj.contactPoint.telephone&&!seenPhones.has(obj.contactPoint.telephone)){const phone=extractPhone(obj.contactPoint.telephone);if(phone){structuredContacts.push({phone:phone});seenPhones.add(phone)}}}if(Array.isArray(obj)){obj.forEach((item=>extractFromObj(item)))}else if(typeof obj==="object"){Object.values(obj).forEach((val=>{if(typeof val==="object")extractFromObj(val)}))}};extractFromObj(data)}));resultDivs.forEach((div=>{try{const titleElement=div.querySelector("h3, h3.LC20lb, .r, .DKV0Md");const linkElements=div.querySelectorAll("a");const links=Array.from(linkElements).map((a=>a.href)).filter((href=>href&&!href.includes("google.com/search")&&href.startsWith("http")));if(titleElement||links.length>0){foundRelevantData=true;let name=titleElement?titleElement.textContent.trim():"";if(!name&&links.length>0){try{const url=new URL(links[0]);name=url.hostname.replace("www.","")}catch(e){name=links[0]}}let url=links.length>0?links[0]:"";if(url&&seenUrls.has(url)){return}if(url){seenUrls.add(url)}const allText=div.innerText+" "+div.textContent;let email=extractEmail(allText);let phone=extractPhone(allText);if(!phone){const telLinks=div.querySelectorAll('a[href^="tel:"]');if(telLinks&&telLinks.length>0){const telNumber=telLinks[0].href.replace("tel:","").trim();if(telNumber&&!seenPhones.has(telNumber)){phone=telNumber;seenPhones.add(phone)}}}const citeElements=div.querySelectorAll("cite");citeElements.forEach((cite=>{const citeText=cite.textContent;if(!email){const citedEmail=extractEmail(citeText);if(citedEmail&&!seenEmails.has(citedEmail.toLowerCase())){email=citedEmail;seenEmails.add(email.toLowerCase())}}}));if((email||phone)&&url){if(email)seenEmails.add(email.toLowerCase());if(phone)seenPhones.add(phone);results.push({name:name,email:email,phone:phone,url:url})}else if(url&&structuredContacts.length>0){for(const contact of structuredContacts){if(contact.email&&!seenEmails.has(contact.email.toLowerCase())||contact.phone&&!seenPhones.has(contact.phone)){if(contact.email)seenEmails.add(contact.email.toLowerCase());if(contact.phone)seenPhones.add(contact.phone);results.push({name:name,email:contact.email||"",phone:contact.phone||"",url:url});break}}}else if(url&&validPageEmails.length>0&&url.indexOf("google.com")===-1){const availableEmail=validPageEmails.find((e=>!seenEmails.has(e.toLowerCase())));if(availableEmail){seenEmails.add(availableEmail.toLowerCase());results.push({name:name,email:availableEmail,phone:phone||"",url:url})}}}}catch(error){console.error("Error while scraping:",error)}if(results.length>=100){return false}}));if(results.length===0){const featuredElements=document.querySelectorAll(".kp-wholepage, .ILfuVd, .hgKElc, .FzvWSb");featuredElements.forEach((element=>{const text=element.innerText;const email=extractEmail(text);const phone=extractPhone(text);if(email&&!seenEmails.has(email.toLowerCase())||phone&&!seenPhones.has(phone)){foundRelevantData=true;const name=document.querySelector("h2, h3")?.textContent||"Featured Result";const url=window.location.href;if(email)seenEmails.add(email.toLowerCase());if(phone)seenPhones.add(phone);if(!seenUrls.has(url)){seenUrls.add(url);results.push({name:name,email:email||"",phone:phone||"",url:url})}}}));if(results.length===0&&validPageEmails.length>0){const unusedEmails=validPageEmails.filter((e=>!seenEmails.has(e.toLowerCase()))).slice(0,5);if(unusedEmails.length>0){const url=window.location.href;if(!seenUrls.has(url)){seenUrls.add(url);unusedEmails.forEach((email=>{seenEmails.add(email.toLowerCase());results.push({name:"Page Result",email:email,phone:"",url:url})}));foundRelevantData=true}}}}results.forEach((result=>{if(!result.url)result.url=window.location.href}));if(!foundRelevantData){chrome.runtime.sendMessage({action:"noMoreResults"})}console.log("Scraped Website Information:",results);return results}chrome.runtime.onMessage.addListener(((request,sender,sendResponse)=>{if(request.action==="scrape"){const results=scrapeGoogleSearchResults();chrome.runtime.sendMessage({action:"scrapingResults",results:results})}}));chrome.runtime.sendMessage({action:"contentScriptLoaded"});